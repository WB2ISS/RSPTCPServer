####    Makefile-macOS
###
###  Requires:
###            SDRplay API version 3.14
###            cmake version 3.29.0 or later (support for APPLE_CLASSIC linker option)
###
#
#	cd <xxxxx>/RSPTCPServer
# rm -rf build
# mkdir build
# cd build
# make -f ../Makefile-macOS

EXECUTABLE 		= rsp_tcp
VERSION    		= 1.1.0
MACOS      		= macos13
PROFILE    		= "SDR"

SRCDIR 				= ..
SOURCE 				= $(SRCDIR)/rsp_tcp.c
LICENSEDIR		= ..
LICENSE				= $(LICENSEDIR)/$(EXECUTABLE)-license.rtf
DISTRIBUTION	= $(LICENSEDIR)/distribution.xml
INSTALL     	= /usr/local/bin

SIGNID				= "Developer ID Application: Transition Technology Ventures, LLC (6V82P5ET42)"
INSTALLID			= "Developer ID Installer: Transition Technology Ventures, LLC (6V82P5ET42)"

FOLDER      	= $(EXECUTABLE)-$(VERSION)-$(MACOS)
DMG						= $(FOLDER).dmg
PKG						= $(FOLDER).pkg
PKGL					= $(FOLDER)-L.pkg

rsp_tcp:	$(SOURCE)

						cmake -DCMAKE_C_COMPILER_TARGET=x86_64-apple-macosx13.0 -DCMAKE_LINKER_TYPE=APPLE_CLASSIC ..
						make VERBOSE=1
						install_name_tool -change libsdrplay_api.so.3.14 /usr/local/lib/libsdrplay_api.so.3.14 ./rsp_tcp
						mv $(EXECUTABLE) $(EXECUTABLE)-x86_64

						rm -rf CMakeFiles

						cmake -DCMAKE_C_COMPILER_TARGET=arm64-apple-macosx13.0 -DCMAKE_LINKER_TYPE=APPLE_CLASSIC ..
						make VERBOSE=1
						install_name_tool -change libsdrplay_api.so.3.14 /usr/local/lib/libsdrplay_api.so.3.14 ./rsp_tcp
						mv $(EXECUTABLE) $(EXECUTABLE)-arm64

						lipo -create -output $(EXECUTABLE) $(EXECUTABLE)-x86_64 $(EXECUTABLE)-arm64
						lipo -archs $(EXECUTABLE)
						otool -L $(EXECUTABLE)

dmg:			$(EXECUTABLE)

						mkdir $(FOLDER)-dmg
						cp $(EXECUTABLE) $(FOLDER)-dmg
						cp $(LICENSE) $(FOLDER)-dmg
						codesign -vf --timestamp  --options runtime --sign $(SIGNID) --entitlements $(SRCDIR)/entitlements.plist $(FOLDER)-dmg/$(EXECUTABLE)
						hdiutil create -fs HFS+ -srcfolder $(FOLDER)-dmg -volname $(FOLDER)-dmg $(DMG)
						codesign -vf --timestamp  --options runtime --sign $(SIGNID) --entitlements $(SRCDIR)/entitlements.plist $(DMG)
						codesign --verify --verbose $(DMG)
						xcrun notarytool submit $(DMG) --keychain-profile $(PROFILE) --wait
						spctl -a -t open --context context:primary-signature -v $(DMG)
						xcrun stapler staple $(DMG)
						xcrun stapler validate $(DMG)

pkg:			$(EXECUTABLE)

						mkdir $(FOLDER)-pkg
						cp $(EXECUTABLE)	$(FOLDER)-pkg
						codesign -vf --timestamp --options runtime --sign $(SIGNID) $(FOLDER)-pkg/$(EXECUTABLE)
						pkgbuild --root ./$(FOLDER)-pkg \
								 		--identifier $(EXECUTABLE) \
								 		--install-location $(INSTALL) \
								 		--sign $(INSTALLID) \
								 		$(PKGL)

						productbuild --package-path $(PKGL) \
								 		--sign $(INSTALLID) \
								 		--distribution $(DISTRIBUTION) \
								 		--resources $(LICENSEDIR) \
								 		$(PKG)

						pkgutil --check-signature $(PKG)
						xcrun notarytool submit $(PKG) --keychain-profile $(PROFILE) --wait
						xcrun stapler staple $(PKG)
						xcrun stapler validate $(PKG)
						spctl --assess --verbose --type install $(PKG)


all:			$(EXECUTABLE) dmg pkg


clean:

						rm -rf $(EXECUTABLE) $(EXECUTABLE)-x86_64 $(EXECUTABLE)-arm64 $(FOLDER)-dmg $(DMG) $(FOLDER)-pkg $(PKGL) $(PKG)
